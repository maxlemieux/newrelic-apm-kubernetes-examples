FROM eclipse-temurin:21.0.1_12-jdk-jammy

# Set the working directory in the container
WORKDIR /usr/src/app

# Install curl and unzip to download and extract dependencies
RUN apt-get update && apt-get install -y curl unzip && rm -rf /var/lib/apt/lists/*

# Download the New Relic Java agent ZIP file and extract the JAR files
RUN curl -o newrelic-java.zip https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip && \
    unzip newrelic-java.zip -d newrelic && \
    mv newrelic/newrelic/newrelic.jar ./newrelic-agent.jar && \
    mv newrelic/newrelic/newrelic-api.jar ./newrelic-api.jar && \
    rm -rf newrelic newrelic-java.zip

# Download the NanoHTTPD JAR file
RUN curl -o nanohttpd.jar https://repo1.maven.org/maven2/org/nanohttpd/nanohttpd/2.3.1/nanohttpd-2.3.1.jar

# Download the SQLite JDBC driver JAR file (replace with the correct version)
RUN curl -o sqlite-jdbc.jar https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.36.0.3/sqlite-jdbc-3.36.0.3.jar

# Copy the server's source code into the container
COPY src/com/newrelic/example /usr/src/app/com/newrelic/example

# Compile the Java application with the New Relic agent, New Relic API, and NanoHTTPD on the classpath
RUN javac -cp ".:newrelic-agent.jar:newrelic-api.jar:nanohttpd.jar:sqlite-jdbc.jar" com/newrelic/example/NewRelicApiServer.java

# Run the server when the container launches, including the New Relic agent, New Relic API, and NanoHTTPD on the classpath
CMD ["java", "-javaagent:newrelic-agent.jar", "-cp", ".:newrelic-agent.jar:newrelic-api.jar:nanohttpd.jar:sqlite-jdbc.jar", "com.newrelic.example.NewRelicApiServer"]
